#服务的端口号
server:
  port: 8001

spring:
  application:
    name: cloud-payment-service #服务的名字
  datasource: #数据源配置
    type: com.alibaba.druid.pool.DruidDataSource            # 当前数据源操作类型
    driver-class-name: com.mysql.cj.jdbc.Driver             # mysql驱动包(可以不用配置的，springBoot会根据url自动仲裁对应的驱动)
    url: jdbc:mysql://192.168.2.112:3306/springcloud?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=Asia/Shanghai
    username: root
    password: pUl9b7RSEB9w
  cloud:
    zookeeper:
      connect-string: 192.168.2.112:2181  #zookeeper注册中心地址

mybatis:
  mapperLocations: classpath:mapper/**/*.xml
  type-aliases-package: com.aristoco.springcloud.beans    # 所有beans别名类所在包

#配置提供端点给hystrixDashboard监控当前服务
management:
  endpoints:
    web:
      exposure:
        include: "*"
#eureka:
#  instance:
#    instance-id: payment-8001  #注册中心中，当前微服务的标识，区别于微服务名，是用于相同微服务之间的辨识
#    prefer-ip-address: true   #注册中心中，当前微服务的的ip地址 false :不显示（默认） true :显示
#    #心跳检测与续约时间
#    #开发时设置小些，保证服务关闭后注册中心能及时剔除服务
#    #eureka客户端向服务端发送心跳的时间间隔，单位为秒（默认是30秒）
#    lease-renewal-interval-in-seconds: 1
#    #eureka服务端在收到最好一次心跳后等待时间上限，单位为秒（默认是90秒），超时将剔除服务
#    lease-expiration-duration-in-seconds: 2
#  client:
#    #不向注册中心注册自己
#    register-with-eureka: true
#    #false 表示自己就是服务注册中心，职责就是维护服务实例，并不需要取检索服务
#    #是否从EurekaServer抓取已有的注册信息，默认为true。单节点无所谓，集群必须设置为true才能配合ribbon使用负载均衡
#    fetch-registry: true
#    service-url:
#      #设置与Eureka Server交互的地址查询服务和注册服务都需要依赖这个地址
#      #Eureka集群需要将所有的服务注册中心地址都填入
#      defaultZone: http://eureka-7001.com:7001/eureka/,http://eureka-7002.com:7002/eureka/